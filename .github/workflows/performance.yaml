name: Performance
run-name: Performance (${{ inputs.date || 'scheduled' }})

on:
  schedule:
    - cron: '30 7 * * *'
  workflow_dispatch:
    inputs:
      date:
        description: 'Date to benchmark'
        required: true
        default: "2024-01-01"

jobs:
  versions:
    name: Find versions

    runs-on: ubuntu-latest

    steps:
    - name: Checkout OpenTTD
      uses: actions/checkout@v4
      with:
        repository: OpenTTD/OpenTTD
        fetch-depth: 0

    - name: Detect versions
      shell: bash
      id: versions
      run: |
        if [ -z "${{ inputs.date }}" ]; then
          today=$(date -d "-1 day" +%Y-%m-%d)
        else
          today=$(date -d "${{ inputs.date }}" +%Y-%m-%d)
        fi
        yesterday=$(date -d "${today} - 1 day" +%Y-%m-%d)

        # Find the hash of today / yesterday.
        hash_today=$(git rev-list -n 1 --first-parent --before="${today}T23:59:59Z" master)
        hash_yesterday=$(git rev-list -n 1 --first-parent --before="${yesterday}T23:59:59Z" master)

        today_actual=$(TZ=UTC0 git show -s --date=iso-local --format=%cd ${hash_today} | cut -d\  -f1)
        yesterday_actual=$(TZ=UTC0 git show -s --date=iso-local --format=%cd ${hash_yesterday} | cut -d\  -f1)

        echo "Today's date: ${today_actual}"
        echo "Today's hash: ${hash_today}"
        echo "Yesterday's date: ${yesterday_actual}"
        echo "Yesterday's hash: ${hash_yesterday}"

        echo "date_requested=$(echo ${today} | sed 's/-//g')" >> $GITHUB_OUTPUT
        echo "date_today=$(echo ${today_actual} | sed 's/-//g')" >> $GITHUB_OUTPUT
        echo "hash_today=${hash_today}" >> $GITHUB_OUTPUT
        echo "date_yesterday=$(echo ${yesterday_actual} | sed 's/-//g')" >> $GITHUB_OUTPUT
        echo "hash_yesterday=${hash_yesterday}" >> $GITHUB_OUTPUT

    outputs:
      date-requested: ${{ steps.versions.outputs.date_requested }}
      date-today: ${{ steps.versions.outputs.date_today }}
      hash-today: ${{ steps.versions.outputs.hash_today }}
      date-yesterday: ${{ steps.versions.outputs.date_yesterday }}
      hash-yesterday: ${{ steps.versions.outputs.hash_yesterday }}

  compile:
    name: Compile
    needs: versions

    if: needs.versions.outputs.hash-today != needs.versions.outputs.hash-yesterday

    strategy:
      fail-fast: false
      matrix:
        include:
        - name: today
          hash: ${{ needs.versions.outputs.hash-today }}
        - name: yesterday
          hash: ${{ needs.versions.outputs.hash-yesterday }}
        - name: stable
          hash: "12.0"

    uses: ./.github/workflows/rw-compile.yaml
    with:
      name: ${{ matrix.name }}
      hash: ${{ matrix.hash }}

  benchmark:
    name: Benchmark
    needs:
    - versions
    - compile

    if: needs.versions.outputs.hash-today != needs.versions.outputs.hash-yesterday

    strategy:
      fail-fast: false
      matrix:
        include:
        - savegame: "wentbourne.sav"
          ticks: 1000
          mem-ticks: 200
        - savegame: "opntitle.sav"
          ticks: 100000
          mem-ticks: 2000
        - savegame: "opntitle-1.0.sav"
          ticks: 20000000
          mem-ticks: 10000
        - savegame: "opntitle-1.1.sav"
          ticks: 100000
          mem-ticks: 2000
        - savegame: "opntitle-1.2.sav"
          ticks: 20000000
          mem-ticks: 10000
        - savegame: "opntitle-1.3.sav"
          ticks: 20000000
          mem-ticks: 10000
        - savegame: "opntitle-1.4.sav"
          ticks: 10000
          mem-ticks: 2000
        - savegame: "opntitle-1.5.sav"
          ticks: 40000
          mem-ticks: 2000
        - savegame: "opntitle-1.7.sav"
          ticks: 40000
          mem-ticks: 2000
        - savegame: "opntitle-1.9.sav"
          ticks: 20000000
          mem-ticks: 10000
        - savegame: "lordaro_biggest_town_ever.sav"
          ticks: 5000
          mem-ticks: 1000
        - savegame: "lordaro_British-Railways-4th-Oct-2082.sav"
          ticks: 3000
          mem-ticks: 1000
        - savegame: "PublicServerGame_05_Final.sav"
          ticks: 4000
          mem-ticks: 1000
        - savegame: "PublicServerGame_326_Final.sav"
          ticks: 6000
          mem-ticks: 1000
        - savegame: "PublicServerGame_329_Final.sav"
          ticks: 1000
          mem-ticks: 1000
        - savegame: "speed-test-600-15-Timbertrains-15th-Sep-2031.sav"
          ticks: 1000
          mem-ticks: 1000
        - savegame: "timberwolf-Garnway-on-sea-Transport-1892-01-04.sav"
          ticks: 50000
          mem-ticks: 1000
        - savegame: "timberwolf-Northern-Canal-Cooperative-1847-04-18.sav"
          ticks: 20000
          mem-ticks: 1000

    uses: ./.github/workflows/rw-benchmark-loop.yaml
    with:
      savegame: ${{ matrix.savegame }}
      ticks: ${{ matrix.ticks }}
      mem-ticks: ${{ matrix.mem-ticks }}
      date-today: ${{ needs.versions.outputs.date-today }}
      date-yesterday: ${{ needs.versions.outputs.date-yesterday }}

  report:
    name: Report
    needs:
    - versions
    - benchmark

    # Normally a job is skipped if its dependency is skipped.
    # So we need to tell GitHub Runners to execute this step even
    # if the benchmark was skipped.
    if: always() && needs.versions.result == 'success' && (needs.benchmark.result == 'success' || needs.benchmark.result == 'skipped')

    runs-on: ubuntu-latest

    steps:
    - name: Generate access token
      id: generate_token
      uses: tibdex/github-app-token@v2
      with:
        app_id: ${{ secrets.PERFORMANCE_APP_ID }}
        private_key: ${{ secrets.PERFORMANCE_APP_PRIVATE_KEY }}
        installation_retrieval_mode: "repository"
        installation_retrieval_payload: "TrueBrain/OpenTTD-performance-reports"

    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ steps.generate_token.outputs.token }}
        repository: TrueBrain/OpenTTD-performance-reports

    - name: Download performance reports
      if: needs.versions.outputs.hash-today != needs.versions.outputs.hash-yesterday
      uses: actions/download-artifact@v4
      with:
        pattern: performance-*
        merge-multiple: true

    - name: Download profiles
      if: needs.versions.outputs.hash-today != needs.versions.outputs.hash-yesterday
      uses: actions/download-artifact@v4
      with:
        pattern: profile-*
        merge-multiple: true

    - name: Merge performance reports
      if: needs.versions.outputs.hash-today != needs.versions.outputs.hash-yesterday
      shell: bash
      id: merge
      run: |
        year=$(echo "${{ needs.versions.outputs.date-today }}" | cut -c1-4)
        month=$(echo "${{ needs.versions.outputs.date-today }}" | cut -c5-6)
        report=${year}/${month}/${{ needs.versions.outputs.date-today }}.performance.csv

        echo "report=${report}" >> $GITHUB_OUTPUT

        rm -rf ${year}/${month}/${{ needs.versions.outputs.date-today }}
        mkdir -p ${year}/${month}/${{ needs.versions.outputs.date-today }}

        mv *.cpu-prof.gz ${year}/${month}/${{ needs.versions.outputs.date-today }}/
        mv *.mem-prof.gz ${year}/${month}/${{ needs.versions.outputs.date-today }}/

        echo "savegame,version,cpu,cpu_stddev,memory" > ${report}
        cat *.performance >> ${report}

    - name: Store report
      if: needs.versions.outputs.hash-today != needs.versions.outputs.hash-yesterday
      uses: actions/upload-artifact@v4
      with:
        name: performance
        path: ${{ steps.merge.outputs.report }}
        retention-days: 5

    - name: Commit and push (reports)
      if: needs.versions.outputs.hash-today != needs.versions.outputs.hash-yesterday
      shell: bash
      run: |
        year=$(echo "${{ needs.versions.outputs.date-today }}" | cut -c1-4)
        month=$(echo "${{ needs.versions.outputs.date-today }}" | cut -c5-6)

        git config --global user.name "OpenTTD Performance"
        git config --global user.email "performance@openttd.org"

        git add ${year}/${month}/${{ needs.versions.outputs.date-today }}.performance.csv
        git add ${year}/${month}/${{ needs.versions.outputs.date-today }}

        git commit -m "Add: performance results for ${{ needs.versions.outputs.date-today }}"
        git push

    - name: Commit and push (no commits)
      if: needs.versions.outputs.hash-today == needs.versions.outputs.hash-yesterday
      shell: bash
      run: |
        year=$(echo "${{ needs.versions.outputs.date-requested }}" | cut -c1-4)
        month=$(echo "${{ needs.versions.outputs.date-requested }}" | cut -c5-6)

        git config --global user.name "OpenTTD Performance"
        git config --global user.email "performance@openttd.org"

        mkdir -p ${year}/${month}
        touch ${year}/${month}/${{ needs.versions.outputs.date-requested }}.no-commits
        git add ${year}/${month}/${{ needs.versions.outputs.date-requested }}.no-commits

        git commit -m "Add: ${{ needs.versions.outputs.date-requested }} had no commits on this day"
        git push
